//---------------------------------------------
// qd_spontaneous
// Allowing Mage/Bard kits to cast spells like Sorcerers
// For use with the Enhanced Infinity Engine v2.0 and later. 
// Author: Aquadrizzt 
// Version: 0.1 
// Published: June 27, 2017 
//---------------------------------------------

OUTER_SPRINT qd_spontaneous#version "0.1"

DEFINE_ACTION_FUNCTION qd_spontaneous
	STR_VAR 
		kit_clab = "" 
		kit_prefix = ""
		known_prog = "SPLSRCKN"
		casts_prog = "MXSPLSRC" 
		lib_dir = "" 
		patch_itm_now = ""
		patch_spl_now = ""
BEGIN 
	//This will only install the first time the library is used. 
	ACTION_IF (NOT FILE_EXISTS_IN_GAME ~qd_spontaneous.qd~) BEGIN 
		//stat checks for each spell level.
		APPEND ~splprot.2da~ ~QDSORCERYA1LT %TAB%89%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYA1EQ %TAB%89%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYA2LT %TAB%90%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYA2EQ %TAB%90%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYA3LT %TAB%91%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYA3EQ %TAB%91%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYA4LT %TAB%92%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYA4EQ %TAB%92%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYA5LT %TAB%93%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYA5EQ %TAB%93%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYA6LT %TAB%94%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYA6EQ %TAB%94%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYA7LT %TAB%95%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYA7EQ %TAB%95%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYA8LT %TAB%96%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYA8EQ %TAB%96%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYA9LT %TAB%97%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYA9EQ %TAB%97%TAB%-1%TAB%7~

		APPEND ~splprot.2da~ ~QDSORCERYD1LT %TAB%100%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYD1EQ %TAB%100%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYD2LT %TAB%101%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYD2EQ %TAB%101%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYD3LT %TAB%102%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYD3EQ %TAB%102%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYD4LT %TAB%103%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYD4EQ %TAB%103%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYD5LT %TAB%104%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYD5EQ %TAB%104%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYD6LT %TAB%105%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYD6EQ %TAB%105%TAB%-1%TAB%7~
		APPEND ~splprot.2da~ ~QDSORCERYD7LT %TAB%106%TAB%-1%TAB%11~
		APPEND ~splprot.2da~ ~QDSORCERYD7EQ %TAB%106%TAB%-1%TAB%7~

		APPEND ~splstate.ids~ ~200 QD_SPONTANEOUS_ARCANE~ 
		APPEND ~splstate.ids~ ~201 QD_SPONTANEOUS_DIVINE~ 

		//in weidu checks for each spell level.
		COPY_EXISTING ~splprot.2da~ ~override~
			COUNT_2DA_COLS cols // amount of columns
			READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
			FOR (row = 1; row < rows; ++row) BEGIN // iterate over rows
			  READ_2DA_ENTRY_FORMER rows row 0 ~stat~ // read column value
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA1LT~ BEGIN
				SET qdsorca1lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA1EQ~ BEGIN
				SET qdsorca1eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA2LT~ BEGIN
				SET qdsorca2lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA2EQ~ BEGIN
				SET qdsorca2eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA3LT~ BEGIN
				SET qdsorca3lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA3EQ~ BEGIN
				SET qdsorca3eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA4LT~ BEGIN
				SET qdsorca4lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA4EQ~ BEGIN
				SET qdsorca4eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA5LT~ BEGIN
				SET qdsorca5lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA5EQ~ BEGIN
				SET qdsorca5eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA6LT~ BEGIN
				SET qdsorca6lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA6EQ~ BEGIN
				SET qdsorca6eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA7LT~ BEGIN
				SET qdsorca7lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA7EQ~ BEGIN
				SET qdsorca7eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA8LT~ BEGIN
				SET qdsorca8lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA8EQ~ BEGIN
				SET qdsorca8eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA9LT~ BEGIN
				SET qdsorca9lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYA9EQ~ BEGIN
				SET qdsorca9eq = %row%
			  END
			  
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD1LT~ BEGIN
				SET qdsorcd1lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD1EQ~ BEGIN
				SET qdsorcd1eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD2LT~ BEGIN
				SET qdsorcd2lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD2EQ~ BEGIN
				SET qdsorcd2eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD3LT~ BEGIN
				SET qdsorcd3lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD3EQ~ BEGIN
				SET qdsorcd3eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD4LT~ BEGIN
				SET qdsorcd4lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD4EQ~ BEGIN
				SET qdsorcd4eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD5LT~ BEGIN
				SET qdsorcd5lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD5EQ~ BEGIN
				SET qdsorcd5eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD6LT~ BEGIN
				SET qdsorcd6lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD6EQ~ BEGIN
				SET qdsorcd6eq = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD7LT~ BEGIN
				SET qdsorcd7lt = %row%
			  END
			  PATCH_IF ~%stat%~ STRING_EQUAL_CASE ~QDSORCERYD7EQ~ BEGIN
				SET qdsorcd7eq = %row%
			  END
			END
		BUT_ONLY

		//Making Jesters use the Blade kit flag (should work with Might and Guile kit flag switching)
		COPY_EXISTING ~kitlist.2da~ ~override~
			REPLACE_TEXTUALLY EXACT_MATCH ~0x00400000~ ~0x00200000~
		BUT_ONLY

		//Removing these spells from selection table -> prevent Sorcerer from learning them
		APPEND ~HIDESPL.2da~ ~SPWI110	1	0~ //Identify
		APPEND ~HIDESPL.2da~ ~SPWI420	1	0~ //Minor Sequencer
		APPEND ~HIDESPL.2da~ ~SPWI710	1	0~ //Spell Sequencer
		APPEND ~HIDESPL.2da~ ~SPWI809	1	0~ //Spell Trigger
		APPEND ~HIDESPL.2da~ ~SPWI617	1	0~ //Contingency
		APPEND ~HIDESPL.2da~ ~SPWI908	1	0~ //Chain Contingency
		
		//generate check, refresh, remove spells 
		//check shell spells [arcane]
		OUTER_FOR (lvl = 1; lvl < 10; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT spl ~qdcka%lvl%~
			OUTER_TEXT_SPRINT ltvar ~qdsorca%lvl%lt~
			OUTER_TEXT_SPRINT eqvar ~qdsorca%lvl%eq~
			COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
				FOR (spls = 0; spls < 10; ++spls) BEGIN	
					TEXT_SPRINT checkspl ~qdcka%lvl%%spls%~
					shift = (1 << 16) 
					checknum = shift * spls
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 318 target = 1 timing = 0 duration = 1 parameter1 = EVAL ~%checknum%~ parameter2= EVAL ~%%eqvar%%~ insert_point = 0 special = (0 - 1) STR_VAR resource = EVAL ~%spl%~ END	
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%checknum%~ parameter2= EVAL ~%%eqvar%%~ insert_point = 0 STR_VAR resource = EVAL ~%checkspl%~ END	
				END 
		END 

		//check shell spells [divine]
		OUTER_FOR (lvl = 1; lvl < 8; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT spl ~qdckd%lvl%~
			OUTER_TEXT_SPRINT ltvar ~qdsorcd%lvl%lt~
			OUTER_TEXT_SPRINT eqvar ~qdsorcd%lvl%eq~
			COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
				FOR (spls = 0; spls < 10; ++spls) BEGIN	
					TEXT_SPRINT checkspl ~qdckd%lvl%%spls%~
					shift = (1 << 16) 
					checknum = shift * spls
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 318 target = 1 timing = 0 duration = 1 parameter1 = EVAL ~%checknum%~ parameter2= EVAL ~%%eqvar%%~ insert_point = 0 special = (0 - 1)  STR_VAR resource = EVAL ~%spl%~ END	
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%checknum%~ parameter2= EVAL ~%%eqvar%%~ insert_point = 0 STR_VAR resource = EVAL ~%checkspl%~ END	
				END 
		END 

		//check spells [arcane] 
		OUTER_FOR (lvl = 1; lvl < 10; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT ltvar ~qdsorca%lvl%lt~
			OUTER_TEXT_SPRINT eqvar ~qdsorca%lvl%eq~
			OUTER_FOR (spls = 0; spls < 10; ++spls) BEGIN	
				OUTER_TEXT_SPRINT spl ~qdcka%lvl%%spls%~
				COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
					TEXT_SPRINT refresh ~qdaref%lvl%~
					TEXT_SPRINT remove ~qdarem%lvl%~
					shift = (1 << 8) 
					numtrue = shift * spls
					numfalse = 0xffffffff - (shift * spls)
					FOR (remain = spls + 1; remain > (0 - 1) ; --remain) BEGIN
						TEXT_SPRINT remainstring ~qdastr%lvl%%remain%~
						num = shift * (spls - remain)
						LPF ADD_SPELL_EFFECT INT_VAR opcode = 318 target = 1 timing = 0 duration = 1 parameter1 = EVAL ~%num%~ parameter2= EVAL ~%%eqvar%%~ insert_point = 0 special = (0 - 1) STR_VAR resource = EVAL ~%spl%~ END	
						LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%num%~ parameter2= EVAL ~%%eqvar%%~ insert_point = 0 STR_VAR resource = EVAL ~%remainstring%~ END	
					END 
					PATCH_IF (spls > 0) BEGIN //if only 1 spell/level skip this part
						LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%numfalse%~ parameter2= EVAL ~%%ltvar%%~  insert_point = 0 STR_VAR resource = EVAL ~%refresh%~ END
					END 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%numtrue%~ parameter2= EVAL ~%%eqvar%%~  insert_point = 0  STR_VAR resource = EVAL ~%remove%~ END	
			END 
		END 

		//check spells [divine] 
		OUTER_FOR (lvl = 1; lvl < 8; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT ltvar ~qdsorcd%lvl%lt~
			OUTER_TEXT_SPRINT eqvar ~qdsorcd%lvl%eq~
			OUTER_FOR (spls = 0; spls < 10; ++spls) BEGIN	
				OUTER_TEXT_SPRINT spl ~qdckd%lvl%%spls%~
				COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
					TEXT_SPRINT refresh ~qddref%lvl%~
					TEXT_SPRINT remove ~qddrem%lvl%~
					shift = (1 << 8) 
					numtrue = shift * spls
					numfalse = 0xffffffff - (shift * spls)
					FOR (remain = spls + 1; remain > (0 - 1) ; --remain) BEGIN
						TEXT_SPRINT remainstring ~qddstr%lvl%%remain%~
						num = shift * (spls - remain)
						LPF ADD_SPELL_EFFECT INT_VAR opcode = 318 target = 1 timing = 0 duration = 1 parameter1 = EVAL ~%num%~ parameter2= EVAL ~%%eqvar%%~ insert_point = 0 special = (0 - 1) STR_VAR resource = EVAL ~%spl%~ END	
						LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%num%~ parameter2= EVAL ~%%eqvar%%~ insert_point = 0 STR_VAR resource = EVAL ~%remainstring%~ END	
					END 
					PATCH_IF (spls > 0) BEGIN //if only 1 spell/level skip this part
						LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%numfalse%~ parameter2= EVAL ~%%ltvar%%~ insert_point = 0 STR_VAR resource = EVAL ~%refresh%~ END
					END 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%numtrue%~ parameter2= EVAL ~%%eqvar%%~ insert_point = 0 STR_VAR resource = EVAL ~%remove%~ END	
			END 
		END 

		//refresh spells [arcane]
		OUTER_FOR (lvl = 1; lvl < 10; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT spl ~qdaref%lvl%~
			OUTER_SET prof = 88 + lvl + 65536
			OUTER_SET shift = (1 << 8) 
			COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 233 target = 1 timing = 0 duration = 2400 parameter1 = EVAL ~%shift%~ parameter2= EVAL ~%prof%~  END	
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 261 target = 1 timing = 1 duration = 2400 parameter1 = EVAL ~%lvl%~ parameter2 = 0 END	
		END 

		//refresh spells [divine]
		OUTER_FOR (lvl = 1; lvl < 8; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT spl ~qddcst%lvl%~
			OUTER_SET prof = 99 + lvl + 65536
			OUTER_SET shift = (1 << 8) 
			COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 233 target = 1 timing = 0 duration = 2400 parameter1 = EVAL ~%shift%~ parameter2= EVAL ~%prof%~  END	
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 261 target = 1 timing = 1 duration = 2400 parameter1 = EVAL ~%lvl%~ parameter2 = 1 END	
		END 

		//remove shell spells [arcane]
		OUTER_FOR (lvl = 1; lvl < 10; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT spl ~qdarem%lvl%~
			OUTER_TEXT_SPRINT ltvar ~qdsorca%lvl%lt~
			OUTER_TEXT_SPRINT eqvar ~qdsorca%lvl%eq~
			COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
				FOR (slots = 1; slots < 10; ++slots) BEGIN	
					TEXT_SPRINT checkspl ~qdarem%lvl%%slots%~
					shift = (1 << 24) 
					checknum = shift * slots
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%checknum%~ parameter2= EVAL ~%%eqvar%%~  STR_VAR resource = EVAL ~%checkspl%~ END	
				END 
		END 

		//remove shell spells [divine]
		OUTER_FOR (lvl = 1; lvl < 8; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT spl ~qddrem%lvl%~
			OUTER_TEXT_SPRINT ltvar ~qdsorcd%lvl%lt~
			OUTER_TEXT_SPRINT eqvar ~qdsorcd%lvl%eq~
			COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
				FOR (slots = 1; slots < 10; ++slots) BEGIN	
					TEXT_SPRINT checkspl ~qddrem%lvl%%slots%~
					shift = (1 << 24) 
					checknum = shift * slots
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = EVAL ~%checknum%~ parameter2= EVAL ~%%eqvar%%~  STR_VAR resource = EVAL ~%checkspl%~ END	
				END 
		END 

		//remove spells [arcane]
		OUTER_FOR (lvl = 1; lvl < 10; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT ltvar ~qdsorca%lvl%lt~
			OUTER_TEXT_SPRINT eqvar ~qdsorca%lvl%eq~
			OUTER_FOR (slots = 1; slots < 10; ++slots) BEGIN	
				OUTER_TEXT_SPRINT spl ~qdarem%lvl%%slots%~
				OUTER_SET removeslots = slots * (0 - 1)
				OUTER_SET levelflag = 2**(lvl - 1)
				COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 42 target = 1 timing = 0 duration = 1 parameter1 = EVAL ~%removeslots%~ parameter2= EVAL ~%levelflag%~  END	
			END 
		END 

		//remove spells [divine] 
		OUTER_FOR (lvl = 1; lvl < 8; ++lvl) BEGIN 
			OUTER_TEXT_SPRINT ltvar ~qdsorcd%lvl%lt~
			OUTER_TEXT_SPRINT eqvar ~qdsorcd%lvl%eq~
			OUTER_FOR (slots = 1; slots < 10; ++slots) BEGIN	
				OUTER_TEXT_SPRINT spl ~qddrem%lvl%%slots%~
				OUTER_SET removeslots = slots * (0 - 1)
				OUTER_SET levelflag = 2**(lvl - 1)
				COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 62 target = 1 timing = 0 duration = 1 parameter1 = EVAL ~%removeslots%~ parameter2= EVAL ~%levelflag%~  END	
			END 
		END 

		//remaining string spells [arcane]
		OUTER_FOR (lvl = 1; lvl < 9; ++lvl) BEGIN 
			OUTER_FOR (slots = 0; slots < 10; ++slots) BEGIN	
				OUTER_TEXT_SPRINT spl ~qdastr%lvl%%slots%~
				COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 139 target = 1 timing = 1 parameter1 = RESOLVE_STR_REF(@10000001)  END	
			END 
		END 

		//remaining string spells [divine]
		OUTER_FOR (lvl = 1; lvl < 8; ++lvl) BEGIN 
			OUTER_FOR (slots = 0; slots < 10; ++slots) BEGIN	
				OUTER_TEXT_SPRINT spl ~qddstr%lvl%%slots%~
				COPY ~%lib_dir%/QDBLANK.spl~ ~override/%spl%.spl~
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 139 target = 1 timing = 1 parameter1 = RESOLVE_STR_REF(@10000001)  END	
			END 
		END 
		
		COPY_EXISTING ~sw1h01.itm~ ~override/qd_spontaneous.qd~ //spontaneous macro setup identifier file
	END 
	
	//new line for handling prepared/memorization
	COPY_EXISTING ~%kit_clab%.2da~ ~override~
		COUNT_2DA_COLS cols // amount of columns
		INNER_ACTION BEGIN 
			OUTER_TEXT_SPRINT newline ~SPLSLOTS%TAB%~
			OUTER_FOR (col = 1; col < cols; ++col) BEGIN 
				OUTER_TEXT_SPRINT newline ~%newline%****%TAB%~
			END 
		END 
	APPEND ~%kit_clab%.2da~ ~%newline%~  

	//new spells to build off for handling difference
	COPY_EXISTING ~%kit_clab%.2da~ ~override~
		COUNT_2DA_COLS cols // amount of columns
		READ_2DA_ENTRIES_NOW rows cols // read all file into memory
		FOR (row = 0; row < rows; ++row) BEGIN // iterate over rows
			READ_2DA_ENTRY_FORMER rows row 0 desc // read row value
			PATCH_IF (~%desc%~ STRING_EQUAL ~SPLSLOTS~) BEGIN 
				SET roi = row 
				row = rows
			END 
		END 
		FOR (col = 1; col < cols; ++col) BEGIN // iterate over rows
			SET_2DA_ENTRY_LATER ~qd_qdsorc_splslots~ roi col ~AP_%kit_prefix%%col%~
			INNER_ACTION BEGIN 
				COPY ~Sorcery/data/QDBLANK.spl~ ~override/%kit_prefix%%col%.spl~
			END 
		END 
		SET_2DA_ENTRIES_NOW ~qd_qdsorc_splslots~ cols
		

	//adding spell slot/casts tracking to clab based on mxsplwiz
	COPY_EXISTING ~mxsplwiz.2da~ ~override~ 
		COUNT_2DA_COLS wizcols // amount of columns

		READ_2DA_ENTRIES_NOW wizrows wizcols // read all file into memory  
		INNER_ACTION BEGIN 
			ACTION_IF (FILE_EXISTS_IN_GAME ~%known_prog%.2da~) BEGIN 
				COPY_EXISTING ~%known_prog%.2da~ ~override~ 
					COUNT_2DA_COLS sorcols // amount of columns
					READ_2DA_ENTRIES_NOW sorrows sorcols // read all file into memory
			END ELSE BEGIN 
				COPY ~%known_prog%.2da~ ~override~ 
					COUNT_2DA_COLS sorcols // amount of columns
					READ_2DA_ENTRIES_NOW sorrows sorcols // read all file into memory
			END 
			ACTION_IF (FILE_EXISTS_IN_GAME ~%casts_prog%.2da~) BEGIN 
				COPY_EXISTING ~%casts_prog%.2da~ ~override~ 
					COUNT_2DA_COLS srccols // amount of columns
					READ_2DA_ENTRIES_NOW srcrows srccols // read all file into memory
			END ELSE BEGIN   
				COPY ~%casts_prog%.2da~ ~override~ 
					COUNT_2DA_COLS srccols // amount of columns
					READ_2DA_ENTRIES_NOW srcrows srccols // read all file into memory
			END 
		END 
		FOR (row = 0; row < sorrows; ++row) BEGIN // iterate over rows
			READ_2DA_ENTRY_FORMER sorrows row 0 charlevel // get level
			FOR (col = 1; col < sorcols ; ++col) BEGIN //iterate over cols
				READ_2DA_ENTRY_FORMER wizrows row col wiz // spls in base progression
				READ_2DA_ENTRY_FORMER sorrows row col sor // spls in new progression
				READ_2DA_ENTRY_FORMER srcrows row col src // spls per day
				spllevel = col
				delta = sor - (wiz + 1)
				levelexp = 2**(%spllevel% - 1)
				lowlevel = charlevel - 1
				casts = src - 1
				slots = sor
				prof = 88 + spllevel + 65536 
				castshift = (1 << 16)
				slotshift = (1 << 24)
				caststotal = casts * castshift
				slotstotal = slots * slotshift
				PATCH_IF (delta) BEGIN 
					INNER_ACTION BEGIN 
						COPY_EXISTING ~override/%kit_prefix%%charlevel%.spl~ ~override~
							LPF ADD_SPELL_EFFECT INT_VAR opcode = 42 target = 1 timing = 9 parameter1 = EVAL ~%delta%~ parameter2= EVAL ~%levelexp%~  END	
					END 
				END 
				PATCH_IF (caststotal > 0) BEGIN 
					INNER_ACTION BEGIN 
						COPY_EXISTING ~override/%kit_prefix%%charlevel%.spl~ ~override~
							LPF ADD_SPELL_EFFECT INT_VAR opcode = 233 target = 1 timing = 9 parameter1 = EVAL ~%caststotal%~ parameter2= EVAL ~%prof%~  END		
					END 
				END 
				PATCH_IF (slotstotal > 0) BEGIN 
					INNER_ACTION BEGIN 
						COPY_EXISTING ~override/%kit_prefix%%charlevel%.spl~ ~override~
							LPF ADD_SPELL_EFFECT INT_VAR opcode = 233 target = 1 timing = 9 parameter1 = EVAL ~%slotstotal%~ parameter2= EVAL ~%prof%~  END		
					END 
				END 
				 
			END 
			PATCH_IF (charlevel > 1) BEGIN 
				INNER_ACTION BEGIN 
					COPY_EXISTING ~override/%kit_prefix%%charlevel%.spl~ ~override~
						LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 1 timing = 1 parameter2= 0 STR_VAR resource = EVAL ~%kit_prefix%%lowlevel%~ END	
				END 
			END
		END 
		
	COPY_EXISTING ~%kit_clab%.2da~ ~override~ //improve readability
		PRETTY_PRINT_2DA
		
	ACTION_IF (%patch_itm_now%) BEGIN 
		LAF qd_spontaneous.patch_items END 
	END 
	
	ACTION_IF (%patch_spl_now%) BEGIN 
		LAF qd_spontaneous.patch_spells END 
	END 
END 

DEFINE_ACTION_FUNCTION qd_spontaneous.patch_spells BEGIN 
	//patch spells to use new system. 
	COPY_EXISTING ~spell.ids~ ~override~ 
		COUNT_2DA_COLS cols // amount of columns
		READ_2DA_ENTRIES_NOW rows cols // read all file into memory 
		FOR (row = 1; row < rows; ++row) BEGIN
			READ_2DA_ENTRY row 0 cols id 
			READ_2DA_ENTRY row 1 cols name
			SNPRINT 1 type ~%id%~
			LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = EVAL ~%name%~ RET res = spell_res END 
			//PATCH_PRINT ~%type%~
			PATCH_IF ((FILE_EXISTS_IN_GAME ~%res%.spl~) AND (!FILE_CONTAINS_EVALUATED(~hidespl.2da~ ~%res%~))) BEGIN 
				INNER_ACTION BEGIN 
					COPY_EXISTING ~%res%.spl~ ~override~ 
						PATCH_IF (SOURCE_SIZE > 0x71) BEGIN 
							READ_SHORT 0x1c type 
							READ_LONG 0x34 level 		
							READ_BYTE 0x20 jesterflag
							WRITE_BYTE 0x20 (%jesterflag% BOR ~0b01000000~)
							PATCH_IF (type = 1) BEGIN 
								TEXT_SPRINT checkspl ~qdcka%level%~
								LPF ADD_SPELL_CFEFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = 200 parameter2= 110 STR_VAR resource = EVAL ~%checkspl%~ END	
							END 
							PATCH_IF (type = 2) BEGIN 
								TEXT_SPRINT checkspl ~qdckd%level%~
								LPF ADD_SPELL_CFEFFECT INT_VAR opcode = 326 target = 1 timing = 1 parameter1 = 201 parameter2= 110 STR_VAR resource = EVAL ~%checkspl%~ END	
							END 
						END 
				END 
			END 
		END 
END 

DEFINE_ACTION_FUNCTION qd_spontaneous.patch_items BEGIN 
	<<<<<<<< QD/blank2da.2da
	>>>>>>>> 

	COPY ~QD/blank2da.2da~ ~override/qdsoritm.2da~ 

	COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
		GET_OFFSET_ARRAY eqeffs ITM_V10_GEN_EFFECTS 
		PHP_EACH eqeffs AS int => eff_off  BEGIN 
			READ_SHORT eff_off opcode 
			READ_LONG (eff_off + 0x4) param1
			READ_LONG (eff_off + 0x8) param2
			PATCH_IF ((opcode = 42) AND (param1 > 0) AND (param2 > 0)) BEGIN 
				PATCH_IF (param2 > 0) BEGIN 
					FOR (ind = 9; ind > 0; --ind) BEGIN 
						SET binary = 2**(ind - 1) 
						PATCH_IF (param2 >= binary) BEGIN 
							param2 = param2 - binary
							//LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 233 target = 1 timing = 2 	parameter1 = EVAL ~%profinc%~ parameter2= EVAL ~%prof%~ insert_point  = (0 - 1) END
							INNER_ACTION BEGIN 
								APPEND ~qdsoritm.2da~ ~%SOURCE_RES%		%ind% %param1%~ 
							END 
						END 
					END
				END 
			END 	
		END 

	COPY_EXISTING ~qdsoritm.2da~ ~override~ 
		COUNT_2DA_COLS cols // amount of columns
		READ_2DA_ENTRIES_NOW rows cols // read all file into memory  
		FOR (row = 0; row < rows; ++row) BEGIN // iterate over rows
			READ_2DA_ENTRY_FORMER rows row 0 res 
			READ_2DA_ENTRY_FORMER rows row 1 level 
			READ_2DA_ENTRY_FORMER rows row 2 num
			profinc = (num << 24)
			prof = 88 + level + 65536
			INNER_ACTION BEGIN 
				COPY_EXISTING ~%res%.itm~ ~override~ 
					LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 233 target = 1 timing = 2 	parameter1 = EVAL ~%profinc%~ parameter2= EVAL ~%prof%~ END
			END 
		END 
END 

